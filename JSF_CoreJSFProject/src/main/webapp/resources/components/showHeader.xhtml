<ui:composition xmlns="http://www.w3.org/1999/xhtml" xmlns:h="http://xmlns.jcp.org/jsf/html"
	xmlns:f="http://xmlns.jcp.org/jsf/core" xmlns:p="http://xmlns.jcp.org/jsf/passthrough"
	xmlns:ui="http://xmlns.jcp.org/jsf/facelets" xmlns:composite="http://xmlns.jcp.org/jsf/composite">

	<composite:interface>
		<composite:attribute name="showDetails" type="java.lang.Boolean" default="false" />
		<composite:attribute name="showCaption" type="java.lang.Boolean" default="false" />
	</composite:interface>

	<composite:implementation>
		<!-- 
			E possivel especificar um ResourceBundle para o componente composto, basta o resource possuir o mesmo nome do componente.
			Para acessa-lo, utilizamos a variavel cc.attrs.resourceBundleMap + o nome da chave desejada.
		-->
		<ui:fragment rendered="#{cc.attrs.showCaption}">
			<h5>#{cc.attrs.resourceBundleMap.captionMessage}:</h5>
		</ui:fragment>
		#{cc.attrs.showDetails ? headerValues : header}
	</composite:implementation>

</ui:composition>